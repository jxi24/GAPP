zprimecoup (real(kind=8)[0:D.3742] * restrict xval, integer(kind=4) & restrict npar)
{
  static real(kind=8) q[10] [value-expr: coupls.q];
  static real(kind=8) i3[10] [value-expr: coupls.i3];
  static real(kind=8) nc[10] [value-expr: coupls.nc];
  static real(kind=8) v[10] [value-expr: coupls.v];
  static real(kind=8) a[10] [value-expr: coupls.a];
  static real(kind=8) alphat [value-expr: coupls.alphat];
  static real(kind=8) sinhat [value-expr: coupls.sinhat];
  static real(kind=8) coshat [value-expr: coupls.coshat];
  static real(kind=8) rhonc [value-expr: coupls.rhonc];
  static real(kind=8) i3r[10] [value-expr: coupls.i3r];
  static real(kind=8) u1xr[10] [value-expr: coupls.u1xr];
  static real(kind=8) u1xl[10] [value-expr: coupls.u1xl];
  static real(kind=8) fitx [value-expr: fit221.fitx];
  static real(kind=8) fitsph [value-expr: fit221.fitsph];
  static real(kind=8) fitcph [value-expr: fit221.fitcph];
  static real(kind=8) fittph [value-expr: fit221.fittph];
  static real(kind=8) fits2b [value-expr: fit221.fits2b];
  static real(kind=8) kkss [value-expr: fit221.kkss];
  static real(kind=8) kkcc [value-expr: fit221.kkcc];
  static real(kind=8) kkem [value-expr: fit221.kkem];
  static real(kind=8) bestlnx [value-expr: fitbst.bestlnx];
  static real(kind=8) besttph [value-expr: fitbst.besttph];
  static real(kind=8) bests2b [value-expr: fitbst.bests2b];
  static logical(kind=4) flgfitx [value-expr: fitflg.flgfitx];
  static logical(kind=4) flgtph [value-expr: fitflg.flgtph];
  static logical(kind=4) flgs2b [value-expr: fitflg.flgs2b];
  static logical(kind=4) flfout [value-expr: fitflg.flfout];
  static integer(kind=4) modtype [value-expr: fitswtr.modtype];
  static integer(kind=4) plltr [value-expr: fitswtr.plltr];
  static integer(kind=4) prtpll[81] [value-expr: fitswtr.prtpll];
  static logical(kind=4) flagmr [value-expr: flags.flagmr];
  static integer(kind=4) flgblm [value-expr: flags.flgblm];
  static logical(kind=4) ffermi [value-expr: flags.ffermi];
  static logical(kind=4) fa2mt4 [value-expr: flags.fa2mt4];
  static logical(kind=4) fa2mt2 [value-expr: flags.fa2mt2];
  static logical(kind=4) fa2mt0 [value-expr: flags.fa2mt0];
  static logical(kind=4) fla2im [value-expr: flags.fla2im];
  static logical(kind=4) fasmt2 [value-expr: flags.fasmt2];
  static logical(kind=4) fasmt0 [value-expr: flags.fasmt0];
  static logical(kind=4) fas2mt [value-expr: flags.fas2mt];
  static logical(kind=4) flagmf [value-expr: flags.flagmf];
  static logical(kind=4) fpolew [value-expr: flags.fpolew];
  static logical(kind=4) flgech [value-expr: flags.flgech];
  static logical(kind=4) fobliq [value-expr: flags.fobliq];
  static logical(kind=4) f4lqcd [value-expr: flags.f4lqcd];
  static logical(kind=4) falas2 [value-expr: flags.falas2];
  static logical(kind=4) fbayes [value-expr: flags.fbayes];
  static integer(kind=4) flagzp [value-expr: flags.flagzp];
  static logical(kind=4) flagmh [value-expr: flags.flagmh];
  static logical(kind=4) flagmt [value-expr: flags.flagmt];
  static logical(kind=4) flagmc [value-expr: flags.flagmc];
  static logical(kind=4) flgrho [value-expr: flags.flgrho];
  static logical(kind=4) fkappa [value-expr: flags.fkappa];
  static logical(kind=4) flags [value-expr: flags.flags];
  static logical(kind=4) flagt [value-expr: flags.flagt];
  static logical(kind=4) fzprim [value-expr: flags.fzprim];
  static logical(kind=4) fsinth [value-expr: flags.fsinth];
  static logical(kind=4) fwrite [value-expr: flags.fwrite];
  static logical(kind=4) flprob [value-expr: flags.flprob];
  static logical(kind=4) fhiggs [value-expr: flags.fhiggs];
  static logical(kind=4) flagal [value-expr: flags.flagal];
  static logical(kind=4) fsplot [value-expr: flags.fsplot];
  static real(kind=8) alpha [value-expr: inputs.alpha];
  static real(kind=8) gf [value-expr: inputs.gf];
  static real(kind=8) alfas0 [value-expr: inputs.alfas0];
  static real(kind=8) asgrid[2001] [value-expr: inputs.asgrid];
  static real(kind=8) mu0 [value-expr: inputs.mu0];
  static real(kind=8) dahad3 [value-expr: inputs.dahad3];
  static real(kind=8) pol4hf [value-expr: inputs.pol4hf];
  static real(kind=8) an[8004] [value-expr: inputs.an];
  static real(kind=8) bn[8004] [value-expr: inputs.bn];
  static real(kind=8) pi1 [value-expr: inputs.pi1];
  static real(kind=8) pi2 [value-expr: inputs.pi2];
  static real(kind=8) zeta2 [value-expr: inputs.zeta2];
  static real(kind=8) zeta3 [value-expr: inputs.zeta3];
  static real(kind=8) zeta4 [value-expr: inputs.zeta4];
  static real(kind=8) zeta5 [value-expr: inputs.zeta5];
  static real(kind=8) zeta6 [value-expr: inputs.zeta6];
  static real(kind=8) zeta7 [value-expr: inputs.zeta7];
  static real(kind=8) prob [value-expr: limits.prob];
  static real(kind=8) mtp [value-expr: limits.mtp];
  static real(kind=8) sigma [value-expr: limits.sigma];
  static integer(kind=4) zprime [value-expr: limits.zprime];
  static real(kind=8) mw2 [value-expr: mass2.mw2];
  static real(kind=8) mz2 [value-expr: mass2.mz2];
  static real(kind=8) mt2 [value-expr: mass2.mt2];
  static real(kind=8) mh2 [value-expr: mass2.mh2];
  static real(kind=8) mz [value-expr: masses.mz];
  static real(kind=8) mh [value-expr: masses.mh];
  static real(kind=8) mt [value-expr: masses.mt];
  static real(kind=8) mb [value-expr: masses.mb];
  static real(kind=8) mc [value-expr: masses.mc];
  static real(kind=8) ms [value-expr: masses.ms];
  static real(kind=8) md [value-expr: masses.md];
  static real(kind=8) mu [value-expr: masses.mu];
  static real(kind=8) mtau [value-expr: masses.mtau];
  static real(kind=8) mmu [value-expr: masses.mmu];
  static real(kind=8) me [value-expr: masses.me];
  static real(kind=8) mw [value-expr: masses.mw];
  static real(kind=8) swpar [value-expr: obliqe.swpar];
  static real(kind=8) spar [value-expr: obliqe.spar];
  static real(kind=8) tpar [value-expr: obliqe.tpar];
  static real(kind=8) upar [value-expr: obliqe.upar];
  static real(kind=8) brho [value-expr: obliqe.brho];
  static real(kind=8) bkappa [value-expr: obliqe.bkappa];
  static real(kind=8) rpar [value-expr: obliqe.rpar];
  static real(kind=8) zpar [value-expr: obliqe.zpar];
  static real(kind=8) delrwh [value-expr: obliqe.delrwh];
  static real(kind=8) delrzh [value-expr: obliqe.delrzh];
  static real(kind=8) delr [value-expr: obliqe.delr];
  static real(kind=8) rhohat [value-expr: obliqe.rhohat];
  static real(kind=8) rho2 [value-expr: obliqe.rho2];
  static real(kind=8) ratzw2 [value-expr: ratios.ratzw2];
  static real(kind=8) rathw2 [value-expr: ratios.rathw2];
  static real(kind=8) rathz2 [value-expr: ratios.rathz2];
  static real(kind=8) rattw2 [value-expr: ratios.rattw2];
  static real(kind=8) rattz2 [value-expr: ratios.rattz2];
  static real(kind=8) ratth2 [value-expr: ratios.ratth2];
  static real(kind=8) mzp [value-expr: zprime.mzp];
  static real(kind=8) mzp2 [value-expr: zprime.mzp2];
  static real(kind=8) mz02 [value-expr: zprime.mz02];
  static real(kind=8) sinth [value-expr: zprime.sinth];
  static real(kind=8) sinth2 [value-expr: zprime.sinth2];
  static real(kind=8) costh [value-expr: zprime.costh];
  static real(kind=8) costh2 [value-expr: zprime.costh2];
  static real(kind=8) ratg21 [value-expr: zprime.ratg21];
  static real(kind=8) rhoeff [value-expr: zprime.rhoeff];
  static real(kind=8) rhoezp [value-expr: zprime.rhoezp];
  static real(kind=8) rhozzp [value-expr: zprime.rhozzp];
  static real(kind=8) v2[10] [value-expr: zprime.v2];
  static real(kind=8) a2[10] [value-expr: zprime.a2];
  static real(kind=8) eps2_l[10] [value-expr: zprime.eps2_l];
  static real(kind=8) eps2_r[10] [value-expr: zprime.eps2_r];
  static real(kind=8) ratgrl [value-expr: zprime.ratgrl];
  real(kind=8) alpzlr;
  real(kind=8) aparam;
  real(kind=8) bparam;
  real(kind=8) cotalp;
  integer(kind=4) f;
  real(kind=8) norm;
  real(kind=8) ratbsa;
  integer(kind=8) ubound.0;
  integer(kind=8) size.1;
  integer(kind=8) D.3742;
  bitsizetype D.3743;
  sizetype D.3744;

  ubound.0 = (integer(kind=8)) *npar;
  size.1 = NON_LVALUE_EXPR <ubound.0>;
  size.1 = MAX_EXPR <size.1, 0>;
  D.3742 = size.1 + -1;
  D.3743 = (bitsizetype) (sizetype) NON_LVALUE_EXPR <size.1> * 64;
  D.3744 = (sizetype) NON_LVALUE_EXPR <size.1> * 8;
  if (flagzp == 1)
    {
      norm = 6.32455532033675904557412650319747626781463623046875e+0;
      eps2_l[0] = 3.0e+0 / norm;
      eps2_l[1] = 3.0e+0 / norm;
      eps2_l[2] = 3.0e+0 / norm;
      eps2_l[3] = 3.0e+0 / norm;
      eps2_l[4] = -(1.0e+0 / norm);
      eps2_l[5] = -(1.0e+0 / norm);
      eps2_l[6] = -(1.0e+0 / norm);
      eps2_l[7] = -(1.0e+0 / norm);
      eps2_l[8] = -(1.0e+0 / norm);
      eps2_l[9] = -(1.0e+0 / norm);
      eps2_r[0] = 5.0e+0 / norm;
      eps2_r[1] = 1.0e+0 / norm;
      eps2_r[2] = 1.0e+0 / norm;
      eps2_r[3] = 1.0e+0 / norm;
      eps2_r[4] = 1.0e+0 / norm;
      eps2_r[5] = 1.0e+0 / norm;
      eps2_r[6] = 1.0e+0 / norm;
      eps2_r[7] = -(3.0e+0 / norm);
      eps2_r[8] = -(3.0e+0 / norm);
      eps2_r[9] = -(3.0e+0 / norm);
    }
  else
    {
      if (flagzp == 2)
        {
          eps2_l[0] = 2.041241452319315363705953814132953993976116180419921875e-1;
          eps2_r[0] = -2.041241452319315363705953814132953993976116180419921875e-1;
          f = 1;
          if (f <= 9)
            {
              while (1)
                {
                  {
                    logical(kind=4) D.3695;

                    eps2_l[(integer(kind=8)) f] = eps2_l[0];
                    eps2_r[(integer(kind=8)) f] = eps2_r[0];
                    __label_000010:;
                    L.3:;
                    D.3695 = f == 9;
                    f = f + 1;
                    if (D.3695) goto L.4;
                  }
                }
            }
          L.4:;
        }
      else
        {
          if (flagzp == 3)
            {
              norm = 7.7459666924148340427791481488384306430816650390625e+0;
              eps2_l[0] = 1.0e+0 / norm;
              eps2_l[1] = 1.0e+0 / norm;
              eps2_l[2] = 1.0e+0 / norm;
              eps2_l[3] = 1.0e+0 / norm;
              eps2_l[4] = -(2.0e+0 / norm);
              eps2_l[5] = -(2.0e+0 / norm);
              eps2_l[6] = -(2.0e+0 / norm);
              eps2_l[7] = -(2.0e+0 / norm);
              eps2_l[8] = -(2.0e+0 / norm);
              eps2_l[9] = -(2.0e+0 / norm);
              eps2_r[0] = 5.0e+0 / norm;
              eps2_r[1] = 2.0e+0 / norm;
              eps2_r[2] = 2.0e+0 / norm;
              eps2_r[3] = 2.0e+0 / norm;
              eps2_r[4] = 2.0e+0 / norm;
              eps2_r[5] = 2.0e+0 / norm;
              eps2_r[6] = 2.0e+0 / norm;
              eps2_r[7] = -(1.0e+0 / norm);
              eps2_r[8] = -(1.0e+0 / norm);
              eps2_r[9] = -(1.0e+0 / norm);
            }
          else
            {
              if (flagzp == 4)
                {
                  norm = 2.581988897471611199563312766258604824542999267578125e+0;
                  {
                    real(kind=8) D.3699;
                    real(kind=8) D.3698;

                    D.3698 = ratgrl;
                    D.3699 = D.3698 * D.3698;
                    alpzlr = __builtin_sqrt ((D.3699 * coshat) / sinhat - 1.0e+0);
                  }
                  eps2_l[0] = (1.0e+0 / norm) / alpzlr;
                  eps2_l[1] = (1.0e+0 / norm) / alpzlr;
                  eps2_l[2] = (1.0e+0 / norm) / alpzlr;
                  eps2_l[3] = (1.0e+0 / norm) / alpzlr;
                  eps2_l[4] = -(((1.0e+0 / norm) / alpzlr) / 3.0e+0);
                  eps2_l[5] = -(((1.0e+0 / norm) / alpzlr) / 3.0e+0);
                  eps2_l[6] = -(((1.0e+0 / norm) / alpzlr) / 3.0e+0);
                  eps2_l[7] = -(((1.0e+0 / norm) / alpzlr) / 3.0e+0);
                  eps2_l[8] = -(((1.0e+0 / norm) / alpzlr) / 3.0e+0);
                  eps2_l[9] = -(((1.0e+0 / norm) / alpzlr) / 3.0e+0);
                  f = 0;
                  if (f <= 9)
                    {
                      while (1)
                        {
                          {
                            logical(kind=4) D.3703;

                            eps2_r[(integer(kind=8)) f] = eps2_l[(integer(kind=8)) f] + ((i3[(integer(kind=8)) f] * 2.0e+0) * alpzlr) / norm;
                            __label_000020:;
                            L.7:;
                            D.3703 = f == 9;
                            f = f + 1;
                            if (D.3703) goto L.8;
                          }
                        }
                    }
                  L.8:;
                }
              else
                {
                  if (flagzp == 5)
                    {
                      f = 0;
                      if (f <= 9)
                        {
                          while (1)
                            {
                              {
                                logical(kind=4) D.3708;

                                eps2_l[(integer(kind=8)) f] = i3[(integer(kind=8)) f] - q[(integer(kind=8)) f] * sinhat;
                                eps2_r[(integer(kind=8)) f] = -(q[(integer(kind=8)) f] * sinhat);
                                __label_000030:;
                                L.10:;
                                D.3708 = f == 9;
                                f = f + 1;
                                if (D.3708) goto L.11;
                              }
                            }
                        }
                      L.11:;
                    }
                  else
                    {
                      if (flagzp == 6)
                        {
                          norm = 1.0e+2;
                          eps2_l[0] = -(6.5e+1 / norm);
                          eps2_l[1] = -(2.04e+2 / norm);
                          eps2_l[2] = -(6.5e+1 / norm);
                          eps2_l[3] = 7.4e+1 / norm;
                          eps2_l[4] = 6.8e+1 / norm;
                          eps2_l[5] = 6.8e+1 / norm;
                          eps2_l[6] = -(7.1e+1 / norm);
                          eps2_l[7] = 6.8e+1 / norm;
                          eps2_l[8] = 6.8e+1 / norm;
                          eps2_l[9] = -(7.1e+1 / norm);
                          eps2_r[0] = 0.0 / norm;
                          eps2_r[1] = 9.0e+0 / norm;
                          eps2_r[2] = 9.0e+0 / norm;
                          eps2_r[3] = -(1.3e+2 / norm);
                          eps2_r[4] = -(6.0e+0 / norm);
                          eps2_r[5] = -(6.0e+0 / norm);
                          eps2_r[6] = 1.33e+2 / norm;
                          eps2_r[7] = 3.0e+0 / norm;
                          eps2_r[8] = 3.0e+0 / norm;
                          eps2_r[9] = -(1.36e+2 / norm);
                        }
                      else
                        {
                          if (flagzp == 7)
                            {
                              {
                                real(kind=8) D.3716;
                                real(kind=8) D.3715;
                                real(kind=8) D.3714;
                                real(kind=8) D.3713;
                                real(kind=8) D.3712;
                                real(kind=8) D.3711;

                                D.3711 = (*xval)[18];
                                D.3712 = D.3711 * D.3711;
                                D.3713 = (*xval)[19];
                                D.3714 = D.3713 * D.3713;
                                D.3715 = (*xval)[20];
                                D.3716 = D.3715 * D.3715;
                                norm = __builtin_sqrt ((((((((*xval)[18] * 1.6e+1) * (*xval)[19]) / 3.0e+0 + (((*xval)[18] * 2.0e+1) * (*xval)[20]) / 3.0e+0) + ((*xval)[19] * 4.0e+0) * (*xval)[20]) + (D.3712 * 4.0e+1) / 9.0e+0) + D.3714 * 4.0e+0) + D.3716 * 1.6e+1);
                              }
                              eps2_l[1] = ((-(*xval)[18])) / norm;
                              eps2_l[2] = ((-(*xval)[18])) / norm;
                              eps2_l[3] = ((-(*xval)[18])) / norm;
                              eps2_l[4] = (((*xval)[18] / 3.0e+0 + (*xval)[20])) / norm;
                              eps2_l[5] = (((*xval)[18] / 3.0e+0 + (*xval)[20])) / norm;
                              eps2_l[6] = (((*xval)[18] / 3.0e+0 + (*xval)[20])) / norm;
                              eps2_l[7] = (((*xval)[18] / 3.0e+0 + (*xval)[20])) / norm;
                              eps2_l[8] = (((*xval)[18] / 3.0e+0 + (*xval)[20])) / norm;
                              eps2_l[9] = (((*xval)[18] / 3.0e+0 + (*xval)[20])) / norm;
                              eps2_l[0] = ((-(*xval)[18])) / norm;
                              eps2_r[1] = ((((*xval)[19] - (*xval)[18] / 3.0e+0) - (*xval)[20])) / norm;
                              eps2_r[2] = ((((*xval)[19] - (*xval)[18] / 3.0e+0) - (*xval)[20])) / norm;
                              eps2_r[3] = ((((*xval)[19] - (*xval)[18] / 3.0e+0) - (*xval)[20])) / norm;
                              eps2_r[4] = (((-((*xval)[18] / 3.0e+0) - (*xval)[19]) - (*xval)[20])) / norm;
                              eps2_r[5] = (((-((*xval)[18] / 3.0e+0) - (*xval)[19]) - (*xval)[20])) / norm;
                              eps2_r[6] = (((-((*xval)[18] / 3.0e+0) - (*xval)[19]) - (*xval)[20])) / norm;
                              eps2_r[7] = (((*xval)[18] + (*xval)[19])) / norm;
                              eps2_r[8] = (((*xval)[18] + (*xval)[19])) / norm;
                              eps2_r[9] = (((*xval)[18] + (*xval)[19])) / norm;
                              eps2_r[0] = (((-(((*xval)[18] * 5.0e+0) / 3.0e+0) - (*xval)[19]) - (*xval)[20] * 2.0e+0)) / norm;
                            }
                          else
                            {
                              if ((unsigned int) flagzp + 4294967285 <= 1)
                                {
                                  cotalp = 1.0e+0 / __builtin_tan ((*xval)[18]);
                                  ratbsa = __builtin_tan ((*xval)[19]) / __builtin_sin ((*xval)[18]);
                                  if ((*xval)[18] == 0.0)
                                    {
                                      {
                                        real(kind=8) __var_1;

                                        aparam = 0.0;
                                        __var_1 = __builtin_tan ((*xval)[19]);
                                        bparam = -(((__var_1 * 4.0e+0) / ((__var_1 + 2.32379000772445021283374444465152919292449951171875e+0))) / 3.0e+0);
                                        L.16:;
                                      }
                                    }
                                  else
                                    {
                                      aparam = 1.0e+1 / (((ratbsa * 3.162277660168379522787063251598738133907318115234375e+0 + cotalp * 7.3484692283495345321853164932690560817718505859375e+0) - 6.0e+0));
                                      bparam = -((aparam * 4.21637021355783903064917694791802205145359039306640625e-1) * ratbsa);
                                    }
                                  L.15:;
                                  {
                                    real(kind=8) D.3724;
                                    real(kind=8) D.3723;
                                    real(kind=8) D.3722;
                                    real(kind=8) D.3721;

                                    D.3721 = aparam;
                                    D.3722 = D.3721 * D.3721;
                                    D.3723 = bparam;
                                    D.3724 = D.3723 * D.3723;
                                    norm = __builtin_sqrt ((((((aparam * 1.6e+1) / 3.0e+0 + (bparam * 2.0e+1) / 3.0e+0) + (aparam * 4.0e+0) * bparam) + 4.4444444444444446418174266000278294086456298828125e+0) + D.3722 * 4.0e+0) + D.3724 * 1.6e+1);
                                  }
                                  eps2_l[1] = -1.0e+0 / norm;
                                  eps2_l[2] = -1.0e+0 / norm;
                                  eps2_l[3] = -1.0e+0 / norm;
                                  eps2_l[4] = ((bparam + 3.33333333333333314829616256247390992939472198486328125e-1)) / norm;
                                  eps2_l[5] = ((bparam + 3.33333333333333314829616256247390992939472198486328125e-1)) / norm;
                                  eps2_l[6] = ((bparam + 3.33333333333333314829616256247390992939472198486328125e-1)) / norm;
                                  eps2_l[7] = ((bparam + 3.33333333333333314829616256247390992939472198486328125e-1)) / norm;
                                  eps2_l[8] = ((bparam + 3.33333333333333314829616256247390992939472198486328125e-1)) / norm;
                                  eps2_l[9] = ((bparam + 3.33333333333333314829616256247390992939472198486328125e-1)) / norm;
                                  eps2_l[0] = -1.0e+0 / norm;
                                  eps2_r[1] = (((aparam - 3.33333333333333314829616256247390992939472198486328125e-1) - bparam)) / norm;
                                  eps2_r[2] = (((aparam - 3.33333333333333314829616256247390992939472198486328125e-1) - bparam)) / norm;
                                  eps2_r[3] = (((aparam - 3.33333333333333314829616256247390992939472198486328125e-1) - bparam)) / norm;
                                  eps2_r[4] = (((-3.33333333333333314829616256247390992939472198486328125e-1 - aparam) - bparam)) / norm;
                                  eps2_r[5] = (((-3.33333333333333314829616256247390992939472198486328125e-1 - aparam) - bparam)) / norm;
                                  eps2_r[6] = (((-3.33333333333333314829616256247390992939472198486328125e-1 - aparam) - bparam)) / norm;
                                  eps2_r[7] = ((aparam + 1.0e+0)) / norm;
                                  eps2_r[8] = ((aparam + 1.0e+0)) / norm;
                                  eps2_r[9] = ((aparam + 1.0e+0)) / norm;
                                  eps2_r[0] = (((-1.6666666666666667406815349750104360282421112060546875e+0 - aparam) - bparam * 2.0e+0)) / norm;
                                  if (flagzp == 12)
                                    {
                                      eps2_r[7] = ((bparam - 6.6666666666666662965923251249478198587894439697265625e-1)) / norm;
                                      eps2_r[8] = ((bparam - 6.6666666666666662965923251249478198587894439697265625e-1)) / norm;
                                      eps2_r[9] = ((bparam - 6.6666666666666662965923251249478198587894439697265625e-1)) / norm;
                                    }
                                  L.17:;
                                }
                              else
                                {
                                  if (flagzp == 8)
                                    {
                                      eps2_l[1] = (*xval)[18];
                                      eps2_l[2] = (*xval)[18];
                                      eps2_l[3] = (*xval)[18];
                                      eps2_l[4] = (*xval)[20];
                                      eps2_l[5] = (*xval)[20];
                                      eps2_l[6] = (*xval)[20];
                                      eps2_l[7] = (*xval)[20];
                                      eps2_l[8] = (*xval)[20];
                                      eps2_l[9] = (*xval)[20];
                                      eps2_l[0] = (*xval)[18];
                                      eps2_r[1] = (*xval)[19];
                                      eps2_r[2] = (*xval)[19];
                                      eps2_r[3] = (*xval)[19];
                                      eps2_r[4] = (*xval)[21];
                                      eps2_r[5] = (*xval)[21];
                                      eps2_r[6] = (*xval)[21];
                                      eps2_r[7] = (*xval)[22];
                                      eps2_r[8] = (*xval)[22];
                                      eps2_r[9] = (*xval)[22];
                                      eps2_r[0] = 0.0;
                                    }
                                  else
                                    {
                                      if (flagzp == 9)
                                        {
                                          eps2_l[1] = (*xval)[18];
                                          eps2_l[2] = (*xval)[18];
                                          eps2_l[3] = (*xval)[23];
                                          eps2_l[4] = (*xval)[20];
                                          eps2_l[5] = (*xval)[20];
                                          eps2_l[6] = (*xval)[25];
                                          eps2_l[7] = (*xval)[20];
                                          eps2_l[8] = (*xval)[20];
                                          eps2_l[9] = (*xval)[25];
                                          eps2_l[0] = (((*xval)[18] * 2.0e+0 + (*xval)[23])) / 3.0e+0;
                                          eps2_r[1] = (*xval)[19];
                                          eps2_r[2] = (*xval)[19];
                                          eps2_r[3] = (*xval)[24];
                                          eps2_r[4] = (*xval)[21];
                                          eps2_r[5] = (*xval)[21];
                                          eps2_r[6] = 0.0;
                                          eps2_r[7] = (*xval)[22];
                                          eps2_r[8] = (*xval)[22];
                                          eps2_r[9] = (*xval)[26];
                                          eps2_r[0] = 0.0;
                                        }
                                      L.19:;
                                    }
                                  L.18:;
                                }
                              L.14:;
                            }
                          L.13:;
                        }
                      L.12:;
                    }
                  L.9:;
                }
              L.6:;
            }
          L.5:;
        }
      L.2:;
    }
  L.1:;
  f = 0;
  if (f <= 9)
    {
      while (1)
        {
          {
            logical(kind=4) D.3731;

            v2[(integer(kind=8)) f] = eps2_l[(integer(kind=8)) f] + eps2_r[(integer(kind=8)) f];
            a2[(integer(kind=8)) f] = eps2_l[(integer(kind=8)) f] - eps2_r[(integer(kind=8)) f];
            __label_000040:;
            L.20:;
            D.3731 = f == 9;
            f = f + 1;
            if (D.3731) goto L.21;
          }
        }
    }
  L.21:;
  if (flagzp == 10)
    {
      v2[1] = (*xval)[18];
      v2[2] = (*xval)[18];
      v2[3] = (*xval)[23];
      v2[4] = (*xval)[20];
      v2[5] = (*xval)[20];
      v2[6] = 0.0;
      v2[7] = (*xval)[21];
      v2[8] = (*xval)[21];
      v2[9] = (*xval)[25];
      v2[0] = ((((*xval)[18] + (*xval)[19]) + (((*xval)[23] + (*xval)[24])) * 5.0e-1)) / 3.0e+0;
      a2[1] = (*xval)[19];
      a2[2] = (*xval)[19];
      a2[3] = (*xval)[24];
      a2[4] = (*xval)[22];
      a2[5] = (*xval)[22];
      a2[6] = 0.0;
      a2[7] = ((*xval)[20] - (*xval)[21]) + (*xval)[22];
      a2[8] = ((*xval)[20] - (*xval)[21]) + (*xval)[22];
      a2[9] = (*xval)[26];
      a2[0] = ((((*xval)[18] + (*xval)[19]) + (((*xval)[23] + (*xval)[24])) * 5.0e-1)) / 3.0e+0;
      f = 0;
      if (f <= 9)
        {
          while (1)
            {
              {
                logical(kind=4) D.3736;

                eps2_l[(integer(kind=8)) f] = ((v2[(integer(kind=8)) f] + a2[(integer(kind=8)) f])) * 5.0e-1;
                eps2_r[(integer(kind=8)) f] = ((v2[(integer(kind=8)) f] - a2[(integer(kind=8)) f])) * 5.0e-1;
                __label_000050:;
                L.23:;
                D.3736 = f == 9;
                f = f + 1;
                if (D.3736) goto L.24;
              }
            }
        }
      L.24:;
    }
  L.22:;
  if (flagzp == 13)
    {
      norm = 1.0e+0;
      eps2_l[0] = (*xval)[18] / norm;
      eps2_l[1] = (*xval)[18] / norm;
      eps2_l[2] = (*xval)[18] / norm;
      eps2_l[3] = (*xval)[18] / norm;
      eps2_l[4] = (*xval)[19] / norm;
      eps2_l[5] = (*xval)[19] / norm;
      eps2_l[6] = (*xval)[19] / norm;
      eps2_l[7] = (*xval)[19] / norm;
      eps2_l[8] = (*xval)[19] / norm;
      eps2_l[9] = (*xval)[19] / norm;
      eps2_r[0] = ((((*xval)[18] * 3.0e+0 + (*xval)[19] * 9.0e+0)) * 1.25e-1) / norm;
      eps2_r[1] = ((((*xval)[18] * 5.0e+0 - (*xval)[19] * 9.0e+0)) * 2.5e-1) / norm;
      eps2_r[2] = ((((*xval)[18] * 5.0e+0 - (*xval)[19] * 9.0e+0)) * 2.5e-1) / norm;
      eps2_r[3] = ((((*xval)[18] * 5.0e+0 - (*xval)[19] * 9.0e+0)) * 2.5e-1) / norm;
      eps2_r[4] = -(((((*xval)[18] * 3.0e+0 - (*xval)[19] * 7.0e+0)) * 2.5e-1) / norm);
      eps2_r[5] = -(((((*xval)[18] * 3.0e+0 - (*xval)[19] * 7.0e+0)) * 2.5e-1) / norm);
      eps2_r[6] = -(((((*xval)[18] * 3.0e+0 - (*xval)[19] * 7.0e+0)) * 2.5e-1) / norm);
      eps2_r[7] = ((((*xval)[18] * 3.0e+0 + (*xval)[19])) * 2.5e-1) / norm;
      eps2_r[8] = ((((*xval)[18] * 3.0e+0 + (*xval)[19])) * 2.5e-1) / norm;
      eps2_r[9] = ((((*xval)[18] * 3.0e+0 + (*xval)[19])) * 2.5e-1) / norm;
      f = 0;
      if (f <= 9)
        {
          while (1)
            {
              {
                logical(kind=4) D.3741;

                v2[(integer(kind=8)) f] = eps2_l[(integer(kind=8)) f] + eps2_r[(integer(kind=8)) f];
                a2[(integer(kind=8)) f] = eps2_l[(integer(kind=8)) f] - eps2_r[(integer(kind=8)) f];
                __label_000060:;
                L.26:;
                D.3741 = f == 9;
                f = f + 1;
                if (D.3741) goto L.27;
              }
            }
        }
      L.27:;
    }
  L.25:;
  return;
}


