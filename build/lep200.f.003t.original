lep200 (real(kind=8)[22] * restrict xs200, real(kind=8)[22] * restrict afb200)
{
  static real(kind=8) q[10] [value-expr: coupls.q];
  static real(kind=8) i3[10] [value-expr: coupls.i3];
  static real(kind=8) nc[10] [value-expr: coupls.nc];
  static real(kind=8) v[10] [value-expr: coupls.v];
  static real(kind=8) a[10] [value-expr: coupls.a];
  static real(kind=8) alphat [value-expr: coupls.alphat];
  static real(kind=8) sinhat [value-expr: coupls.sinhat];
  static real(kind=8) coshat [value-expr: coupls.coshat];
  static real(kind=8) rhonc [value-expr: coupls.rhonc];
  static real(kind=8) i3r[10] [value-expr: coupls.i3r];
  static real(kind=8) u1xr[10] [value-expr: coupls.u1xr];
  static real(kind=8) u1xl[10] [value-expr: coupls.u1xl];
  static real(kind=8) fitx [value-expr: fit221.fitx];
  static real(kind=8) fitsph [value-expr: fit221.fitsph];
  static real(kind=8) fitcph [value-expr: fit221.fitcph];
  static real(kind=8) fittph [value-expr: fit221.fittph];
  static real(kind=8) fits2b [value-expr: fit221.fits2b];
  static real(kind=8) kkss [value-expr: fit221.kkss];
  static real(kind=8) kkcc [value-expr: fit221.kkcc];
  static real(kind=8) kkem [value-expr: fit221.kkem];
  static real(kind=8) bestlnx [value-expr: fitbst.bestlnx];
  static real(kind=8) besttph [value-expr: fitbst.besttph];
  static real(kind=8) bests2b [value-expr: fitbst.bests2b];
  static logical(kind=4) flgfitx [value-expr: fitflg.flgfitx];
  static logical(kind=4) flgtph [value-expr: fitflg.flgtph];
  static logical(kind=4) flgs2b [value-expr: fitflg.flgs2b];
  static logical(kind=4) flfout [value-expr: fitflg.flfout];
  static integer(kind=4) modtype [value-expr: fitswtr.modtype];
  static integer(kind=4) plltr [value-expr: fitswtr.plltr];
  static integer(kind=4) prtpll[81] [value-expr: fitswtr.prtpll];
  static logical(kind=4) flagmr [value-expr: flags.flagmr];
  static integer(kind=4) flgblm [value-expr: flags.flgblm];
  static logical(kind=4) ffermi [value-expr: flags.ffermi];
  static logical(kind=4) fa2mt4 [value-expr: flags.fa2mt4];
  static logical(kind=4) fa2mt2 [value-expr: flags.fa2mt2];
  static logical(kind=4) fa2mt0 [value-expr: flags.fa2mt0];
  static logical(kind=4) fla2im [value-expr: flags.fla2im];
  static logical(kind=4) fasmt2 [value-expr: flags.fasmt2];
  static logical(kind=4) fasmt0 [value-expr: flags.fasmt0];
  static logical(kind=4) fas2mt [value-expr: flags.fas2mt];
  static logical(kind=4) flagmf [value-expr: flags.flagmf];
  static logical(kind=4) fpolew [value-expr: flags.fpolew];
  static logical(kind=4) flgech [value-expr: flags.flgech];
  static logical(kind=4) fobliq [value-expr: flags.fobliq];
  static logical(kind=4) f4lqcd [value-expr: flags.f4lqcd];
  static logical(kind=4) falas2 [value-expr: flags.falas2];
  static logical(kind=4) fbayes [value-expr: flags.fbayes];
  static integer(kind=4) flagzp [value-expr: flags.flagzp];
  static logical(kind=4) flagmh [value-expr: flags.flagmh];
  static logical(kind=4) flagmt [value-expr: flags.flagmt];
  static logical(kind=4) flagmc [value-expr: flags.flagmc];
  static logical(kind=4) flgrho [value-expr: flags.flgrho];
  static logical(kind=4) fkappa [value-expr: flags.fkappa];
  static logical(kind=4) flags [value-expr: flags.flags];
  static logical(kind=4) flagt [value-expr: flags.flagt];
  static logical(kind=4) fzprim [value-expr: flags.fzprim];
  static logical(kind=4) fsinth [value-expr: flags.fsinth];
  static logical(kind=4) fwrite [value-expr: flags.fwrite];
  static logical(kind=4) flprob [value-expr: flags.flprob];
  static logical(kind=4) fhiggs [value-expr: flags.fhiggs];
  static logical(kind=4) flagal [value-expr: flags.flagal];
  static logical(kind=4) fsplot [value-expr: flags.fsplot];
  static real(kind=8) alpha [value-expr: inputs.alpha];
  static real(kind=8) gf [value-expr: inputs.gf];
  static real(kind=8) alfas0 [value-expr: inputs.alfas0];
  static real(kind=8) asgrid[2001] [value-expr: inputs.asgrid];
  static real(kind=8) mu0 [value-expr: inputs.mu0];
  static real(kind=8) dahad3 [value-expr: inputs.dahad3];
  static real(kind=8) pol4hf [value-expr: inputs.pol4hf];
  static real(kind=8) an[8004] [value-expr: inputs.an];
  static real(kind=8) bn[8004] [value-expr: inputs.bn];
  static real(kind=8) pi1 [value-expr: inputs.pi1];
  static real(kind=8) pi2 [value-expr: inputs.pi2];
  static real(kind=8) zeta2 [value-expr: inputs.zeta2];
  static real(kind=8) zeta3 [value-expr: inputs.zeta3];
  static real(kind=8) zeta4 [value-expr: inputs.zeta4];
  static real(kind=8) zeta5 [value-expr: inputs.zeta5];
  static real(kind=8) zeta6 [value-expr: inputs.zeta6];
  static real(kind=8) zeta7 [value-expr: inputs.zeta7];
  static real(kind=8) prob [value-expr: limits.prob];
  static real(kind=8) mtp [value-expr: limits.mtp];
  static real(kind=8) sigma [value-expr: limits.sigma];
  static integer(kind=4) zprime [value-expr: limits.zprime];
  static real(kind=8) mw2 [value-expr: mass2.mw2];
  static real(kind=8) mz2 [value-expr: mass2.mz2];
  static real(kind=8) mt2 [value-expr: mass2.mt2];
  static real(kind=8) mh2 [value-expr: mass2.mh2];
  static real(kind=8) mz [value-expr: masses.mz];
  static real(kind=8) mh [value-expr: masses.mh];
  static real(kind=8) mt [value-expr: masses.mt];
  static real(kind=8) mb [value-expr: masses.mb];
  static real(kind=8) mc [value-expr: masses.mc];
  static real(kind=8) ms [value-expr: masses.ms];
  static real(kind=8) md [value-expr: masses.md];
  static real(kind=8) mu [value-expr: masses.mu];
  static real(kind=8) mtau [value-expr: masses.mtau];
  static real(kind=8) mmu [value-expr: masses.mmu];
  static real(kind=8) me [value-expr: masses.me];
  static real(kind=8) mw [value-expr: masses.mw];
  static real(kind=8) swpar [value-expr: obliqe.swpar];
  static real(kind=8) spar [value-expr: obliqe.spar];
  static real(kind=8) tpar [value-expr: obliqe.tpar];
  static real(kind=8) upar [value-expr: obliqe.upar];
  static real(kind=8) brho [value-expr: obliqe.brho];
  static real(kind=8) bkappa [value-expr: obliqe.bkappa];
  static real(kind=8) rpar [value-expr: obliqe.rpar];
  static real(kind=8) zpar [value-expr: obliqe.zpar];
  static real(kind=8) delrwh [value-expr: obliqe.delrwh];
  static real(kind=8) delrzh [value-expr: obliqe.delrzh];
  static real(kind=8) delr [value-expr: obliqe.delr];
  static real(kind=8) rhohat [value-expr: obliqe.rhohat];
  static real(kind=8) rho2 [value-expr: obliqe.rho2];
  static real(kind=8) ratzw2 [value-expr: ratios.ratzw2];
  static real(kind=8) rathw2 [value-expr: ratios.rathw2];
  static real(kind=8) rathz2 [value-expr: ratios.rathz2];
  static real(kind=8) rattw2 [value-expr: ratios.rattw2];
  static real(kind=8) rattz2 [value-expr: ratios.rattz2];
  static real(kind=8) ratth2 [value-expr: ratios.ratth2];
  static real(kind=8) mzp [value-expr: zprime.mzp];
  static real(kind=8) mzp2 [value-expr: zprime.mzp2];
  static real(kind=8) mz02 [value-expr: zprime.mz02];
  static real(kind=8) sinth [value-expr: zprime.sinth];
  static real(kind=8) sinth2 [value-expr: zprime.sinth2];
  static real(kind=8) costh [value-expr: zprime.costh];
  static real(kind=8) costh2 [value-expr: zprime.costh2];
  static real(kind=8) ratg21 [value-expr: zprime.ratg21];
  static real(kind=8) rhoeff [value-expr: zprime.rhoeff];
  static real(kind=8) rhoezp [value-expr: zprime.rhoezp];
  static real(kind=8) rhozzp [value-expr: zprime.rhozzp];
  static real(kind=8) v2[10] [value-expr: zprime.v2];
  static real(kind=8) a2[10] [value-expr: zprime.a2];
  static real(kind=8) eps2_l[10] [value-expr: zprime.eps2_l];
  static real(kind=8) eps2_r[10] [value-expr: zprime.eps2_r];
  static real(kind=8) ratgrl [value-expr: zprime.ratgrl];
  real(kind=8) aif;
  real(kind=8) al;
  real(kind=8) alfaem;
  real(kind=8) arf;
  real(kind=8) as;
  real(kind=8) beta;
  real(kind=8) beta2;
  real(kind=8) ci;
  real(kind=8) cif;
  real(kind=8) cq;
  real(kind=8) cqf;
  real(kind=8) cr;
  real(kind=8) crf;
  real(kind=8) cum0a2;
  real(kind=8) cum0a3;
  real(kind=8) dgamma;
  integer(kind=4) f;
  real(kind=8) fac1;
  real(kind=8) fac2;
  real(kind=8) hbarc2;
  integer(kind=4) i;
  real(kind=8) intcut;
  real(kind=8) logsme;
  real(kind=8) ratzs;
  real(kind=8) sqrts;
  real(kind=8) var;

  hbarc2 = 3.8937966e+8;
  intcut = 2.77500000000000024424906541753443889319896697998046875e-1;
  cum0a2 = 1.0625e+1 - (zeta3 * 2.3e+1) / 3.0e+0;
  cum0a3 = ((1.4384297839506172067558509297668933868408203125e+2 - (zeta3 * 1.5961e+4) / 1.08e+2) + (zeta5 * 5.75e+2) / 1.8e+1) - (zeta2 * 5.29e+2) / 7.2e+1;
  al = alpha / pi1;
  i = 1;
  if (i <= 2)
    {
      while (1)
        {
          {
            logical(kind=4) D.3769;

            {
              real(kind=8) __var_3;
              real(kind=8) __var_2;
              real(kind=8) __var_1;

              if (i == 1)
                {
                  sqrts = 1.8268999999999999772626324556767940521240234375e+2;
                }
              L.3:;
              if (i == 2)
                {
                  sqrts = 1.886299999999999954525264911353588104248046875e+2;
                }
              L.4:;
              ratzs = (mz2 / sqrts) / sqrts;
              alfahat (&sqrts, &dgamma, &alfaem);
              as = alphas (&sqrts) / pi1;
              logsme = __builtin_log (sqrts / me) * 2.0e+0;
              beta = (al * 2.0e+0) * ((logsme - 1.0e+0));
              beta2 = beta * beta;
              {
                real(kind=8) D.3713;
                real(kind=8) D.3712;

                D.3712 = alfaem;
                D.3713 = D.3712 * D.3712;
                fac1 = ((pi1 * 4.0e+0) / 3.0e+0) * D.3713;
              }
              {
                real(kind=8) D.3714;

                D.3714 = intcut;
                fac2 = __builtin_pow (D.3714, beta) * ((((((logsme * 3.0e+0) * 5.0e-1 + pi2 / 3.0e+0) - 2.0e+0)) * al + 1.0e+0));
              }
              var = intcut / ((1.0e+0 - ratzs));
              __var_1 = __builtin_log (1.0e+0 - var);
              {
                real(kind=8) D.3718;
                real(kind=8) D.3717;

                D.3717 = ((1.0e+0 - ratzs));
                D.3718 = D.3717 * D.3717;
                cr = (((fac2 / D.3718) * (((((((beta - 1.0e+0)) * beta) * __var_1 + 1.0e+0) + ((beta * ratzs) * var) / ((1.0e+0 - var))) - ddilog (&var) * beta2)) - (beta * 5.0e-1) * (((intcut - ((ratzs * 2.0e+0 + 1.0e+0)) * __var_1) + ((((ratzs + 1.0e+0)) * ratzs) * var) / (((1.0e+0 - intcut) - ratzs)))))) * fac1;
              }
              L.5:;
              __var_2 = __builtin_log (1.0e+0 - var);
              ci = (((fac2 / ((1.0e+0 - ratzs))) * (((1.0e+0 - beta * __var_2) - ddilog (&var) * beta2)) - (beta * 5.0e-1) * ((intcut - ((ratzs + 1.0e+0)) * __var_2)))) * fac1;
              L.6:;
              __var_3 = __builtin_log (1.0e+0 - intcut);
              cq = (((((1.0e+0 - beta * __var_3) - ddilog (&intcut) * beta2)) * fac2 - (beta * 5.0e-1) * ((intcut - __var_3)))) * fac1;
              L.7:;
              (*xs200)[(integer(kind=8)) i + 19] = 0.0;
              f = 0;
              if (f <= 9)
                {
                  while (1)
                    {
                      {
                        logical(kind=4) D.3767;

                        {
                          real(kind=8) D.3733;
                          real(kind=8) D.3732;
                          real(kind=8) D.3731;
                          real(kind=8) D.3730;
                          real(kind=8) D.3729;
                          real(kind=8) D.3728;
                          real(kind=8) D.3727;
                          real(kind=8) D.3726;

                          D.3726 = v[1];
                          D.3727 = D.3726 * D.3726;
                          D.3728 = a[1];
                          D.3729 = D.3728 * D.3728;
                          D.3730 = v[(integer(kind=8)) f];
                          D.3731 = D.3730 * D.3730;
                          D.3732 = a[(integer(kind=8)) f];
                          D.3733 = D.3732 * D.3732;
                          crf = (((D.3727 + D.3729)) * cr) * ((D.3731 + D.3733));
                        }
                        cif = ((((ci * 2.0e+0) * v[1]) * v[(integer(kind=8)) f]) * q[1]) * q[(integer(kind=8)) f];
                        {
                          real(kind=8) D.3735;
                          real(kind=8) D.3734;

                          D.3734 = q[(integer(kind=8)) f];
                          D.3735 = D.3734 * D.3734;
                          cqf = cq * D.3735;
                        }
                        arf = ((((cr * 4.0e+0) * v[1]) * v[(integer(kind=8)) f]) * a[1]) * a[(integer(kind=8)) f];
                        aif = ((((ci * 2.0e+0) * q[1]) * q[(integer(kind=8)) f]) * a[1]) * a[(integer(kind=8)) f];
                        {
                          real(kind=8) D.3747;
                          real(kind=8) D.3746;
                          real(kind=8) D.3745;
                          real(kind=8) D.3744;
                          real(kind=8) D.3743;
                          real(kind=8) D.3742;
                          real(kind=8) D.3741;
                          real(kind=8) D.3740;
                          real(kind=8) D.3739;
                          real(kind=8) D.3738;
                          real(kind=8) D.3737;
                          real(kind=8) D.3736;

                          D.3736 = v[1];
                          D.3737 = D.3736 * D.3736;
                          D.3738 = a[1];
                          D.3739 = D.3738 * D.3738;
                          D.3740 = v[(integer(kind=8)) f];
                          D.3741 = D.3740 * D.3740;
                          D.3742 = a[(integer(kind=8)) f];
                          D.3743 = D.3742 * D.3742;
                          D.3744 = ((1.0e+0 - ratzs));
                          D.3745 = D.3744 * D.3744;
                          D.3746 = alfaem;
                          D.3747 = D.3746 * D.3746;
                          crf = (((((((D.3737 + D.3739)) * ((D.3741 + D.3743))) / D.3745) * 4.0e+0) * pi1) / 3.0e+0) * D.3747;
                        }
                        {
                          real(kind=8) D.3749;
                          real(kind=8) D.3748;

                          D.3748 = alfaem;
                          D.3749 = D.3748 * D.3748;
                          cif = ((((((((v[1] * 2.0e+0) * v[(integer(kind=8)) f]) * q[1]) * q[(integer(kind=8)) f]) / ((1.0e+0 - ratzs))) * 4.0e+0) * pi1) / 3.0e+0) * D.3749;
                        }
                        {
                          real(kind=8) D.3753;
                          real(kind=8) D.3752;
                          real(kind=8) D.3751;
                          real(kind=8) D.3750;

                          D.3750 = q[(integer(kind=8)) f];
                          D.3751 = D.3750 * D.3750;
                          D.3752 = alfaem;
                          D.3753 = D.3752 * D.3752;
                          cqf = (((D.3751 * 4.0e+0) * pi1) / 3.0e+0) * D.3753;
                        }
                        {
                          real(kind=8) D.3757;
                          real(kind=8) D.3756;
                          real(kind=8) D.3755;
                          real(kind=8) D.3754;

                          D.3754 = ((1.0e+0 - ratzs));
                          D.3755 = D.3754 * D.3754;
                          D.3756 = alfaem;
                          D.3757 = D.3756 * D.3756;
                          arf = ((((((((v[1] * 4.0e+0) * v[(integer(kind=8)) f]) * a[1]) * a[(integer(kind=8)) f]) / D.3755) * 4.0e+0) * pi1) / 3.0e+0) * D.3757;
                        }
                        {
                          real(kind=8) D.3759;
                          real(kind=8) D.3758;

                          D.3758 = alfaem;
                          D.3759 = D.3758 * D.3758;
                          aif = ((((((((q[1] * 2.0e+0) * q[(integer(kind=8)) f]) * a[1]) * a[(integer(kind=8)) f]) / ((1.0e+0 - ratzs))) * 4.0e+0) * pi1) / 3.0e+0) * D.3759;
                        }
                        if (f != 6)
                          {
                            {
                              real(kind=8) D.3764;
                              real(kind=8) D.3763;
                              real(kind=8) D.3762;
                              real(kind=8) D.3761;

                              D.3761 = sqrts;
                              D.3762 = D.3761 * D.3761;
                              D.3763 = q[(integer(kind=8)) f];
                              D.3764 = D.3763 * D.3763;
                              (*xs200)[((integer(kind=8)) f * 2 + (integer(kind=8)) i) + -1] = (((nc[(integer(kind=8)) f] * (((crf + cif) + cqf))) / D.3762) * hbarc2) * (((((alfaem * 3.0e+0) * 2.5e-1) / pi1) * D.3764 + 1.0e+0));
                            }
                            (*afb200)[((integer(kind=8)) f * 2 + (integer(kind=8)) i) + -1] = ((((arf + aif)) * 3.0e+0) / (((crf + cif) + cqf))) * 2.5e-1;
                            if (f > 3)
                              {
                                (*xs200)[((integer(kind=8)) f * 2 + (integer(kind=8)) i) + -1] = (*xs200)[((integer(kind=8)) f * 2 + (integer(kind=8)) i) + -1] * (((as + 1.0e+0) + (as * as) * ((as * cum0a3 + cum0a2))));
                                (*xs200)[(integer(kind=8)) i + 19] = (*xs200)[(integer(kind=8)) i + 19] + (*xs200)[((integer(kind=8)) f * 2 + (integer(kind=8)) i) + -1];
                              }
                            L.11:;
                          }
                        else
                          {
                            (*xs200)[((integer(kind=8)) f * 2 + (integer(kind=8)) i) + -1] = 0.0;
                            (*afb200)[((integer(kind=8)) f * 2 + (integer(kind=8)) i) + -1] = 0.0;
                          }
                        L.10:;
                        __label_000050:;
                        L.8:;
                        D.3767 = f == 9;
                        f = f + 1;
                        if (D.3767) goto L.9;
                      }
                    }
                }
              L.9:;
              __label_000100:;
            }
            L.1:;
            D.3769 = i == 2;
            i = i + 1;
            if (D.3769) goto L.2;
          }
        }
    }
  L.2:;
  return;
}


