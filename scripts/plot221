#!/bin/bash

# INPUT PARAMETERS ####################################################

target=$1
usrmdl=$2
SMpars=$3

# DIRECTORIES #########################################################

GAPPdir="/home/kirtimaan/git-repos/GAPP/"
SCRPdir=$GAPPdir"scripts"
MDLSdir=$GAPPdir"/src/F/core/mdls"

tempdir=$GAPPdir"src/F/template/"
maindir=$GAPPdir"src/F/driver_code/"
coredir=$GAPPdir"src/F/core/"
builddir=$GAPPdir"build/F/"


PLOTdir=$GAPPdir"221plots"

# MODEL ARRAY #########################################################

cd $MDLSdir

mdlsf=(*.f)
mdls=()
nmdl=0

for mdlf in ${mdlsf[*]}
do

   mdls[$nmdl]=${mdlf%%.f}
   nmdl=$nmdl+1

done

cd $GAPPdir

# FUNCTIONS ###########################################################

clean() {

   rm -rf *.o *.221plot *.template~

}

########################################################################
######### PREPARE DATA FILES WITH BESTFIT VALUES #######################
########################################################################

prep() {

#   summary=$GAPPdir/summary.out
#  if [ -e $summary ]; then rm $summary; fi
   echo "Prepping..."
   
   cd ${GAPPdir}/bin

   if [ $usrmdl ]
   then
	      if [ $SMpars ]
	      then
			 sed 's/MODELNAME/'$SMpars'/' ${tempdir}template_smfit.dat > ${inputdir}smfit.dat
			 echo "Getting best fit values for 'm_t' and 'M_H' in the ["$SMpars"] model."
			 ./$SMpars.fit
			 cd $PLOTdir
			 SMvl=($(cat bestfit_"$SMpars".tmp |while read val; do echo $val; done)) ## READING IN BEST FIT VALUES FROM STANDARD MODEL FIT
	      fi

	      cd ${GAPPdir}/bin
	      sed 's/MODELNAME/'$usrmdl'/' ${tempdir}template_smfit.dat > ${inputdir}smfit.dat
	      echo "Getting best fit values for the ["$usrmdl"] model."
	      ./$usrmdl.fit
	      cd $PLOTdir
	      vals=($(cat bestfit_"$usrmdl".tmp |while read val; do echo $val; done)) ## READING BEST FIT VALUE FROM MODEL FIT

	      if [ $SMpars ] ## IF YOU WANT TO USE THE BEST FIT MT and MH values from SM fits
	      then
			sed -e 's/MODELNAME/'$usrmdl'/' -e 's/BESTMT/'${SMvl[0]}'/' -e 's/BESTMH/'${SMvl[1]}'/' -e 's/BESTFITX/'${vals[2]}'/' -e 's/BESTTPH/'${vals[3]}'/' -e 's/BESTS2B/'${vals[4]}'/' plot.dat.template > plot_"$usrmdl"_"$SMpars".dat
	      else 
			sed -e 's/MODELNAME/'$usrmdl'/' -e 's/BESTMT/'${vals[0]}'/' -e 's/BESTMH/'${vals[1]}'/' -e 's/BESTFITX/'${vals[2]}'/' -e 's/BESTTPH/'${vals[3]}'/' -e 's/BESTS2B/'${vals[4]}'/' plot.dat.template > plot_"$usrmdl".dat
	      fi

	      rm bestfit_"$usrmdl".tmp
   
   else ## REPEAT FOR ALL MODELS
	      if [ $SMpars ]
	      then
			 sed 's/MODELNAME/'$SMpars'/' ${tempdir}template_smfit.dat > ${inputdir}smfit.dat
			 echo "Getting best fit values for 'm_t' and 'M_H' in the ["$SMpars"] model."
			 ./$SMpars.fit
			 cd $PLOTdir
			 SMvl=($(cat bestfit_"$SMpars".tmp |while read val; do echo $val; done))
	      fi
	  
	      for mdl in ${mdls[*]}
	      do
			 cd ${GAPPdir}/bin
			 sed 's/MODELNAME/'$mdl'/' ${tempdir}template_smfit.dat > ${inputdir}smfit.dat
			 echo "Getting best fit values for the ["$mdl"] model."
			 ./$mdl.fit
			 cd $PLOTdir
			 vals=($(cat bestfit_"$mdl".tmp |while read val; do echo $val; done))

			 if [ $SMpars ]
			 then
				sed -e 's/MODELNAME/'$mdl'/' -e 's/BESTMT/'${SMvl[0]}'/' -e 's/BESTMH/'${SMvl[1]}'/' -e 's/BESTFITX/'${vals[2]}'/' -e 's/BESTTPH/'${vals[3]}'/' -e 's/BESTS2B/'${vals[4]}'/' plot.dat.template > plot_"$mdl"_"$SMpars".dat
			 else 
				sed -e 's/MODELNAME/'$mdl'/' -e 's/BESTMT/'${vals[0]}'/' -e 's/BESTMH/'${vals[1]}'/' -e 's/BESTFITX/'${vals[2]}'/' -e 's/BESTTPH/'${vals[3]}'/' -e 's/BESTS2B/'${vals[4]}'/' plot.dat.template > plot_"$mdl".dat
			 fi
	      done

	      rm *.tmp 
   fi 
   
   echo "Finished prep..."

}

########################################################################

mkplt() {

   cd ${GAPPdir}/bin
   

   if [ $usrmdl ]
   then
	      sed 's/MODELNAME/'$usrmdl'/' ${tempdir}template_chi2.f > ${coredir}chi2.f
	      if [ $SMpars ]
	      then
			 sed -e 's/MODELNAME/'$usrmdl'/' -e 's/XXX/'$SMpars'/' ${tempdir}template_221plotter.f > ${maindir}221plotter.f
			 make 221plot
			 mv 221plot $usrmdl.$SMpars.221plot
	      else
			 sed -e 's/MODELNAME/'$usrmdl'/' -e 's/_XXX/''/' ${tempdir}template_221plotter.f  > ${maindir}221plotter.f
			 make 221plot
			 mv 221plot $usrmdl.221plot
	      fi
	      rm ${builddir}chi2.o ${builddir}221plotter.o
   else ## REPEAT FOR ALL MODELS
  
	      for mdl in ${mdls[*]}
	      do
			 sed 's/MODELNAME/'$mdl'/' ${tempdir}template_chi2.f > ${coredir}chi2.f
			 if [ $SMpars ]
			 then
				    sed -e 's/MODELNAME/'$mdl'/' -e 's/XXX/'$SMpars'/' ${tempdir}template_221plotter.f  > ${maindir}221plotter.f
				    make 221plot
				    mv 221plot $mdl.$SMpars.221plot
			 else
				    sed -e 's/MODELNAME/'$mdl'/' -e 's/_XXX/''/' ${tempdir}template_221plotter.f  > ${maindir}221plotter.f
				    make 221plot
				    mv 221plot $mdl.221plot
			 fi        
			 rm ${builddir}chi2.o ${builddir}221plotter.o
	      done   
   fi

}

########################################################################

plt() {
   cd ${GAPPdir}/bin
   if [ $usrmdl ]
   then
	      sed 's/MODELNAME/'$usrmdl'/' ${tempdir}template_smfit.dat > ${inputdir}smfit.dat
	      if [ $SMpars ]
	      then
			 echo "Plotting the ["$usrmdl"] model with ["$SMpars"] best fit values"
			 ./$usrmdl.$SMpars.221plot
	      else
			 echo "Plotting the ["$usrmdl"] model"
			 ./$usrmdl.221plot
	      fi
	      cd $PLOTdir
	      rm bestfit_"$usrmdl".tmp
   else
	      for mdl in ${mdls[*]}
	      do
			 sed 's/MODELNAME/'$mdl'/' ${tempdir}template_smfit.dat > ${inputdir}smfit.dat
			 if [ $SMpars ]
			 then
				    echo "Plotting the ["$mdl"] model with ["$SMpars"] best fit values"
				    ./$mdl.$SMpars.221plot
			 else
				    echo "Plotting the ["$mdl"] model"
				    ./$mdl.221plot
			 fi
	      done   
	      cd $PLOTdir
	      rm *.tmp 
   fi
}

# COMPILE COMMANDS ####################################################

case "$target" in

   clean) clean
   ;;
   prep)  prep
   ;;
   mkplt) mkplt
   ;;
   plt)   plt
   ;;
   all)   clean; prep; mkplt; plt
   ;;
   *)     echo "Options: 'mkplt', 'plt', 'clean' and 'all'"
   ;;

esac

#######################################################################

exit 0
